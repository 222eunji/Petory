# =================================
# Application Configuration
# =================================
spring.application.name=petory

# =================================
# Server Configuration
# =================================
server.port=8080

# =================================
# Database Configuration
# =================================
#MySQL Configuration (RDS)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${MYSQL_URL}
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL}
spring.jpa.open-in-view=false

# MongoDB Configuration (Atlas)
spring.data.mongodb.uri=${MONGODB_URI}
spring.data.mongodb.database=${MONGODB_DATABASE}

# =================================
# Redis Configuration
# =================================
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.timeout=${REDIS_TIMEOUT}
spring.data.redis.ssl.enabled=${REDIS_SSL_ENABLED}

# =================================
# JWT Configuration
# =================================
jwt.secret.key=${JWT_KEY}
jwt.access-token-valid-time=${JWT_ACCESS_TOKEN_VALID_TIME_MS}
jwt.refresh-token-valid-time=${JWT_REFRESH_TOKEN_VALID_TIME_MS}

# =================================
# OAuth2 Configuration - Google
# =================================
# OAuth2 Client Registration - Google
spring.security.oauth2.client.registration.google.client-id=${YOUR_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${YOUR_GOOGLE_CLIENT_SECRET}
app.base-url=${BASE_URL:https://petory.click}
spring.security.oauth2.client.registration.google.redirect-uri=${app.base-url}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile

# OAuth2 Provider - Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# =================================
# Kakao API Configuration
# =================================
kakao.rest-api-key=${KAKAO_REST_API_KEY}

# =================================
# AWS S3 Configuration
# =================================
spring.cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
spring.cloud.aws.credentials.secret-key=${AWS_SECRET_KEY}
spring.cloud.aws.region.static=${AWS_REGION}
cloud.aws.bucket=${AWS_S3_BUCKET}

# =================================
# File Upload Configuration
# =================================
spring.servlet.multipart.max-file-size=${MULTIPART_MAX_FILE_SIZE}
spring.servlet.multipart.max-request-size=${MULTIPART_MAX_REQUEST_SIZE}
spring.servlet.multipart.enabled=true

# =================================
# Logging Configuration
# =================================
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.com.petory=INFO

# =================================
# Actuator Configuration
# =================================
management.endpoints.web.exposure.include=${ACTUATOR_ENDPOINTS:health}
management.endpoint.health.show-details=${ACTUATOR_HEALTH_DETAILS:always}
management.endpoints.web.base-path=${ACTUATOR_BASE_PATH:/actuator}